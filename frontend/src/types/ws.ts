// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

/**
 * Represents one connected player (UUID and chosen display name).
 */
export type Player = { 
/**
 * The server‐assigned unique ID (e.g. a UUID).
 */
player_id: string, 
/**
 * The display name the player typed in (e.g. “Alice”).
 */
name: string, };

/**
 * All messages the **front end** can send to the server.
 */
export type WsClientMsg = { "type": "CreateRoom", "data": { player: Player, } } | { "type": "JoinRoom", "data": { room_id: string, player: Player, } } | { "type": "StartGame", "data": { room_id: string, } } | { "type": "ScoreUpdate", "data": { room_id: string, player_id: string, cleared_count: number, } };

/**
 * All messages the **server** can push back to every client in a room.
 */
export type WsServerMsg = { "type": "RoomCreated", "data": { room_id: string, } } | { "type": "JoinedRoom", "data": { room_id: string, players: Array<Player>, } } | { "type": "RoomPlayersUpdate", "data": { room_id: string, players: Array<Player>, } } | { "type": "GameStarted", "data": { room_id: string, board: Array<number>, duration_secs: bigint, } } | { "type": "TimerTick", "data": { room_id: string, remaining_secs: bigint, } } | { "type": "LeaderboardUpdate", "data": { room_id: string, scores: Array<[string, number]>, } } | { "type": "Error", "data": { room_id: string | null, msg: string, } };
